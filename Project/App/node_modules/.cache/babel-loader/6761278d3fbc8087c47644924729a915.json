{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { getWhitelabel, clearWhitelabel } from './actions';\nconst initialWhitelabel = {\n  loading: false,\n  data: undefined,\n  error: undefined\n};\nexport default createReducer(initialWhitelabel, builder => builder.addCase(getWhitelabel.pending, state => {\n  state.loading = true;\n  state.data = undefined;\n  state.error = undefined;\n}).addCase(getWhitelabel.fulfilled, (state, action) => {\n  state.loading = false;\n  state.data = action.payload;\n  state.error = undefined;\n}).addCase(getWhitelabel.rejected, (state, action) => {\n  var _action$payload;\n\n  state.loading = false;\n  state.data = undefined;\n  state.error = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n}).addCase(clearWhitelabel, _ => initialWhitelabel));","map":{"version":3,"sources":["C:/Users/ghandi/Downloads/project/src/store/whitelabel/reducer.ts"],"names":["createReducer","getWhitelabel","clearWhitelabel","initialWhitelabel","loading","data","undefined","error","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","_"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AAIA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,WAA/C;AAQA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,OAAO,EAAE,KADe;AAExBC,EAAAA,IAAI,EAAEC,SAFkB;AAGxBC,EAAAA,KAAK,EAAED;AAHiB,CAA1B;AAMA,eAAeN,aAAa,CAAkBG,iBAAlB,EAAqCK,OAAO,IACtEA,OAAO,CACJC,OADH,CACWR,aAAa,CAACS,OADzB,EACkCC,KAAK,IAAI;AACvCA,EAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACAO,EAAAA,KAAK,CAACN,IAAN,GAAaC,SAAb;AACAK,EAAAA,KAAK,CAACJ,KAAN,GAAcD,SAAd;AACD,CALH,EAMGG,OANH,CAMWR,aAAa,CAACW,SANzB,EAMoC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACnDF,EAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,EAAAA,KAAK,CAACN,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACAH,EAAAA,KAAK,CAACJ,KAAN,GAAcD,SAAd;AACD,CAVH,EAWGG,OAXH,CAWWR,aAAa,CAACc,QAXzB,EAWmC,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAAA;;AAClDF,EAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,EAAAA,KAAK,CAACN,IAAN,GAAaC,SAAb;AACAK,EAAAA,KAAK,CAACJ,KAAN,sBAAcM,MAAM,CAACC,OAArB,oDAAc,gBAAgBE,OAA9B;AACD,CAfH,EAgBGP,OAhBH,CAgBWP,eAhBX,EAgB4Be,CAAC,IAAId,iBAhBjC,CAD0B,CAA5B","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport type { WhitelabelResources } from 'models/whitelabel'\n\nimport { getWhitelabel, clearWhitelabel } from './actions'\n\ntype WhitelabelState = {\n  loading: boolean\n  data?: WhitelabelResources\n  error?: string\n}\n\nconst initialWhitelabel = {\n  loading: false,\n  data: undefined,\n  error: undefined\n}\n\nexport default createReducer<WhitelabelState>(initialWhitelabel, builder =>\n  builder\n    .addCase(getWhitelabel.pending, state => {\n      state.loading = true\n      state.data = undefined\n      state.error = undefined\n    })\n    .addCase(getWhitelabel.fulfilled, (state, action) => {\n      state.loading = false\n      state.data = action.payload\n      state.error = undefined\n    })\n    .addCase(getWhitelabel.rejected, (state, action) => {\n      state.loading = false\n      state.data = undefined\n      state.error = action.payload?.message\n    })\n    .addCase(clearWhitelabel, _ => initialWhitelabel)\n)\n"]},"metadata":{},"sourceType":"module"}