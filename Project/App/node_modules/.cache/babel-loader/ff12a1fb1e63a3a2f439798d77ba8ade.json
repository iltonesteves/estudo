{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport If from './if';\n\nconst Choose = props => {\n  let when = null;\n  let otherwise = null;\n  React.Children.forEach(props.children, children => {\n    if (children.props.condition === undefined) {\n      otherwise = children;\n    } else if (!when && children.props.condition === true) {\n      when = children;\n    }\n  });\n  return when || otherwise;\n};\n\nChoose.propTypes = {\n  children: PropTypes.node\n};\nChoose.When = If;\n\nChoose.Otherwise = ({\n  render,\n  children\n}) => render ? render() : children;\n\nChoose.Otherwise.propTypes = {\n  children: PropTypes.node,\n  render: PropTypes.func\n};\nexport default Choose;","map":{"version":3,"sources":["C:/Users/ghandi/Project/App/node_modules/react-extras/dist/choose.js"],"names":["React","PropTypes","If","Choose","props","when","otherwise","Children","forEach","children","condition","undefined","propTypes","node","When","Otherwise","render","func"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,MAAf;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,SAAS,GAAG,IAAhB;AACAN,EAAAA,KAAK,CAACO,QAAN,CAAeC,OAAf,CAAuBJ,KAAK,CAACK,QAA7B,EAAuCA,QAAQ,IAAI;AACjD,QAAIA,QAAQ,CAACL,KAAT,CAAeM,SAAf,KAA6BC,SAAjC,EAA4C;AAC1CL,MAAAA,SAAS,GAAGG,QAAZ;AACD,KAFD,MAEO,IAAI,CAACJ,IAAD,IAASI,QAAQ,CAACL,KAAT,CAAeM,SAAf,KAA6B,IAA1C,EAAgD;AACrDL,MAAAA,IAAI,GAAGI,QAAP;AACD;AACF,GAND;AAOA,SAAOJ,IAAI,IAAIC,SAAf;AACD,CAXD;;AAaAH,MAAM,CAACS,SAAP,GAAmB;AACjBH,EAAAA,QAAQ,EAAER,SAAS,CAACY;AADH,CAAnB;AAGAV,MAAM,CAACW,IAAP,GAAcZ,EAAd;;AAEAC,MAAM,CAACY,SAAP,GAAmB,CAAC;AAClBC,EAAAA,MADkB;AAElBP,EAAAA;AAFkB,CAAD,KAGbO,MAAM,GAAGA,MAAM,EAAT,GAAcP,QAH1B;;AAKAN,MAAM,CAACY,SAAP,CAAiBH,SAAjB,GAA6B;AAC3BH,EAAAA,QAAQ,EAAER,SAAS,CAACY,IADO;AAE3BG,EAAAA,MAAM,EAAEf,SAAS,CAACgB;AAFS,CAA7B;AAIA,eAAed,MAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport If from './if';\n\nconst Choose = props => {\n  let when = null;\n  let otherwise = null;\n  React.Children.forEach(props.children, children => {\n    if (children.props.condition === undefined) {\n      otherwise = children;\n    } else if (!when && children.props.condition === true) {\n      when = children;\n    }\n  });\n  return when || otherwise;\n};\n\nChoose.propTypes = {\n  children: PropTypes.node\n};\nChoose.When = If;\n\nChoose.Otherwise = ({\n  render,\n  children\n}) => render ? render() : children;\n\nChoose.Otherwise.propTypes = {\n  children: PropTypes.node,\n  render: PropTypes.func\n};\nexport default Choose;"]},"metadata":{},"sourceType":"module"}