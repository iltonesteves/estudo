{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n/* eslint-disable camelcase */\n\nimport chart_legend_Margin from '@patternfly/react-tokens/dist/esm/chart_legend_Margin';\nimport { VictoryChart } from 'victory-chart';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { getClassName, getComputedLegend, getLabelTextSize, getPaddingForSide, getTheme } from '../ChartUtils';\nexport const Chart = _a => {\n  var {\n    ariaDesc,\n    ariaTitle,\n    children,\n    legendAllowWrap = false,\n    legendComponent = React.createElement(ChartLegend, null),\n    legendData,\n    legendPosition = ChartCommonStyles.legend.position,\n    padding,\n    showAxis = true,\n    themeColor,\n    themeVariant,\n    // destructure last\n    theme = getTheme(themeColor, themeVariant),\n    containerComponent = React.createElement(ChartContainer, null),\n    legendOrientation = theme.legend.orientation,\n    height = theme.chart.height,\n    width = theme.chart.width\n  } = _a,\n      rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"legendAllowWrap\", \"legendComponent\", \"legendData\", \"legendPosition\", \"padding\", \"showAxis\", \"themeColor\", \"themeVariant\", \"theme\", \"containerComponent\", \"legendOrientation\", \"height\", \"width\"]);\n\n  const defaultPadding = {\n    bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n    left: getPaddingForSide('left', padding, theme.chart.padding),\n    right: getPaddingForSide('right', padding, theme.chart.padding),\n    top: getPaddingForSide('top', padding, theme.chart.padding)\n  }; // Clone so users can override container props\n\n  const container = React.cloneElement(containerComponent, Object.assign(Object.assign({\n    desc: ariaDesc,\n    title: ariaTitle,\n    theme\n  }, containerComponent.props), {\n    className: getClassName({\n      className: containerComponent.props.className\n    }) // Override VictoryContainer class name\n\n  }));\n  const legend = React.cloneElement(legendComponent, Object.assign({\n    data: legendData,\n    orientation: legendOrientation,\n    theme\n  }, legendComponent.props)); // Returns a computed legend\n\n  const getLegend = () => {\n    if (!legend.props.data) {\n      return null;\n    }\n\n    let dx = 0;\n    let dy = 0;\n    let xAxisLabelHeight = 0;\n    let legendTitleHeight = legend.props.title ? 10 : 0; // Adjust for axis label\n\n    React.Children.toArray(children).map(child => {\n      if (child.type.role === 'axis' && child.props.label && !child.props.dependentAxis) {\n        xAxisLabelHeight = getLabelTextSize({\n          text: child.props.label,\n          theme\n        }).height + 10;\n        legendTitleHeight = 0;\n      }\n    });\n\n    if (legendPosition === ChartLegendPosition.bottom) {\n      dy += xAxisLabelHeight + legendTitleHeight;\n    } else if (legendPosition === ChartLegendPosition.bottomLeft) {\n      dy += xAxisLabelHeight + legendTitleHeight;\n      dx = -10;\n    } // Adjust legend position when axis is hidden\n\n\n    if (!showAxis) {\n      dy -= chart_legend_Margin.value;\n    }\n\n    return getComputedLegend({\n      allowWrap: legendAllowWrap,\n      chartType: 'chart',\n      dx,\n      dy,\n      height,\n      legendComponent: legend,\n      padding: defaultPadding,\n      position: legendPosition,\n      theme,\n      width\n    });\n  };\n\n  const VictoryChartWithContainerComponent = VictoryChart;\n\n  if (!showAxis) {\n    const Null = () => null;\n\n    VictoryChartWithContainerComponent.defaultProps.defaultAxes.dependent = React.createElement(Null, null);\n    VictoryChartWithContainerComponent.defaultProps.defaultAxes.independent = React.createElement(Null, null);\n  } // Note: containerComponent is required for theme\n\n\n  return React.createElement(VictoryChartWithContainerComponent, Object.assign({\n    containerComponent: container,\n    height: height,\n    padding: defaultPadding,\n    theme: theme,\n    width: width\n  }, rest), children, getLegend());\n};\nChart.displayName = 'Chart';\nhoistNonReactStatics(Chart, VictoryChart);","map":{"version":3,"sources":["../../../../src/components/Chart/Chart.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n/* eslint-disable camelcase */\nimport chart_legend_Margin from '@patternfly/react-tokens/dist/esm/chart_legend_Margin';\nimport { VictoryChart } from 'victory-chart';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartCommonStyles } from '../ChartTheme';\nimport { getClassName, getComputedLegend, getLabelTextSize, getPaddingForSide, getTheme } from '../ChartUtils';\nexport const Chart = (_a) => {\n    var { ariaDesc, ariaTitle, children, legendAllowWrap = false, legendComponent = React.createElement(ChartLegend, null), legendData, legendPosition = ChartCommonStyles.legend.position, padding, showAxis = true, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant), containerComponent = React.createElement(ChartContainer, null), legendOrientation = theme.legend.orientation, height = theme.chart.height, width = theme.chart.width } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"legendAllowWrap\", \"legendComponent\", \"legendData\", \"legendPosition\", \"padding\", \"showAxis\", \"themeColor\", \"themeVariant\", \"theme\", \"containerComponent\", \"legendOrientation\", \"height\", \"width\"]);\n    const defaultPadding = {\n        bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n        left: getPaddingForSide('left', padding, theme.chart.padding),\n        right: getPaddingForSide('right', padding, theme.chart.padding),\n        top: getPaddingForSide('top', padding, theme.chart.padding)\n    };\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const legend = React.cloneElement(legendComponent, Object.assign({ data: legendData, orientation: legendOrientation, theme }, legendComponent.props));\n    // Returns a computed legend\n    const getLegend = () => {\n        if (!legend.props.data) {\n            return null;\n        }\n        let dx = 0;\n        let dy = 0;\n        let xAxisLabelHeight = 0;\n        let legendTitleHeight = legend.props.title ? 10 : 0;\n        // Adjust for axis label\n        React.Children.toArray(children).map((child) => {\n            if (child.type.role === 'axis' && child.props.label && !child.props.dependentAxis) {\n                xAxisLabelHeight = getLabelTextSize({ text: child.props.label, theme }).height + 10;\n                legendTitleHeight = 0;\n            }\n        });\n        if (legendPosition === ChartLegendPosition.bottom) {\n            dy += xAxisLabelHeight + legendTitleHeight;\n        }\n        else if (legendPosition === ChartLegendPosition.bottomLeft) {\n            dy += xAxisLabelHeight + legendTitleHeight;\n            dx = -10;\n        }\n        // Adjust legend position when axis is hidden\n        if (!showAxis) {\n            dy -= chart_legend_Margin.value;\n        }\n        return getComputedLegend({\n            allowWrap: legendAllowWrap,\n            chartType: 'chart',\n            dx,\n            dy,\n            height,\n            legendComponent: legend,\n            padding: defaultPadding,\n            position: legendPosition,\n            theme,\n            width\n        });\n    };\n    const VictoryChartWithContainerComponent = VictoryChart;\n    if (!showAxis) {\n        const Null = () => null;\n        VictoryChartWithContainerComponent.defaultProps.defaultAxes.dependent = React.createElement(Null, null);\n        VictoryChartWithContainerComponent.defaultProps.defaultAxes.independent = React.createElement(Null, null);\n    }\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryChartWithContainerComponent, Object.assign({ containerComponent: container, height: height, padding: defaultPadding, theme: theme, width: width }, rest),\n        children,\n        getLegend()));\n};\nChart.displayName = 'Chart';\nhoistNonReactStatics(Chart, VictoryChart);\n//# sourceMappingURL=Chart.js.map"]},"metadata":{},"sourceType":"module"}