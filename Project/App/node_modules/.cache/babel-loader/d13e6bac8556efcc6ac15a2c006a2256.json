{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghandi\\\\Downloads\\\\project\\\\src\\\\business-components\\\\metrics\\\\metrics.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { For, If } from 'react-extras';\nimport { useHistory } from 'react-router-dom';\nimport { useTheme } from '@mui/material/styles';\nimport { BackIcon, NextIcon } from '../../assets';\nimport { ButtonSlide, Card, Charts } from '../../components';\nimport { ArrowNext, ArrowPrevious, Content, H2 } from '../../theme';\nimport { Block, Cards } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Metrics = props => {\n  _s();\n\n  const {\n    menuView,\n    visible,\n    main,\n    details,\n    nextPage,\n    prevPage,\n    setMenuView,\n    scrollBar,\n    visibleScroll\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  const history = useHistory();\n  useEffect(() => {\n    var _ref, _ref2, _ref3, _ref4, _ref5;\n\n    setMenuView({\n      about: {\n        view: true,\n        inProgress: false\n      },\n      metrics: {\n        view: (_ref = menuView.metrics.view || menuView.metrics.inProgress) !== null && _ref !== void 0 ? _ref : false,\n        inProgress: !menuView.metrics.view\n      },\n      links: {\n        view: (_ref2 = menuView.links.view || menuView.links.inProgress) !== null && _ref2 !== void 0 ? _ref2 : false,\n        inProgress: false\n      },\n      jobs: {\n        view: (_ref3 = menuView.jobs.view || menuView.jobs.inProgress) !== null && _ref3 !== void 0 ? _ref3 : false,\n        inProgress: false\n      },\n      deals: {\n        view: (_ref4 = menuView.deals.view || menuView.deals.inProgress) !== null && _ref4 !== void 0 ? _ref4 : false,\n        inProgress: false\n      },\n      contact: {\n        view: (_ref5 = menuView.contact.view || menuView.contact.inProgress) !== null && _ref5 !== void 0 ? _ref5 : false,\n        inProgress: false\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(If, {\n      condition: visible,\n      children: /*#__PURE__*/_jsxDEV(ArrowPrevious, {\n        onClick: () => history.push(prevPage),\n        children: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(H2, {\n        primaryColor: palette.primary.main,\n        children: \"M\\xE9tricas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        margin: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          gridTemplateColumns: 2,\n          padding: \"0 20px 0 0\",\n          children: /*#__PURE__*/_jsxDEV(For, {\n            of: main,\n            render: x => /*#__PURE__*/_jsxDEV(Card, {\n              title: x.value,\n              subtitle: x.label\n            }, x.label, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        margin: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(For, {\n          of: details,\n          render: detail => /*#__PURE__*/_jsxDEV(Charts, {\n            title: detail.label,\n            subtitle: detail.desc,\n            data: detail.values,\n            typeChart: \"circle\"\n          }, detail.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        margin: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(For, {\n          of: details,\n          render: detail => /*#__PURE__*/_jsxDEV(Charts, {\n            title: detail.label,\n            subtitle: detail.desc,\n            data: detail.values,\n            typeChart: \"line\"\n          }, detail.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(If, {\n        condition: scrollBar && visibleScroll,\n        children: /*#__PURE__*/_jsxDEV(ButtonSlide, {\n          title: \"Deslize para mais\",\n          visible: visible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(If, {\n      condition: visible,\n      children: /*#__PURE__*/_jsxDEV(ArrowNext, {\n        onClick: () => history.push(nextPage),\n        children: /*#__PURE__*/_jsxDEV(NextIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Metrics, \"bIw3rCt4nvpAE0vqPMRGpOALGzs=\", false, function () {\n  return [useTheme, useHistory];\n});\n\n_c = Metrics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Metrics\");","map":{"version":3,"sources":["C:/Users/ghandi/Downloads/project/src/business-components/metrics/metrics.tsx"],"names":["React","useEffect","For","If","useHistory","useTheme","BackIcon","NextIcon","ButtonSlide","Card","Charts","ArrowNext","ArrowPrevious","Content","H2","Block","Cards","Metrics","props","menuView","visible","main","details","nextPage","prevPage","setMenuView","scrollBar","visibleScroll","palette","history","about","view","inProgress","metrics","links","jobs","deals","contact","push","primary","x","value","label","detail","desc","values"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { For, If } from 'react-extras'\nimport { useHistory } from 'react-router-dom'\n\nimport { useTheme } from '@mui/material/styles'\n\nimport { MenuView } from 'models/menu-view'\n\nimport { BackIcon, NextIcon } from '../../assets'\nimport { ButtonSlide, Card, Charts } from '../../components'\nimport { ArrowNext, ArrowPrevious, Content, H2 } from '../../theme'\nimport { Block, Cards, SubtitleText } from './styles'\n\ninterface ValuesProps {\n  x: string\n  y: string\n}\n\ninterface DetailsProps {\n  label: string\n  desc: string\n  type: string\n  values: ValuesProps[]\n}\n\ninterface MainProps {\n  label: string\n  value: number | string\n}\n\ninterface MetricsProps {\n  menuView: MenuView\n  visible: boolean\n  main?: MainProps[]\n  details?: DetailsProps[]\n  nextPage?: string\n  prevPage?: string\n  setMenuView: (value: MenuView) => void\n  scrollBar: boolean\n  visibleScroll: boolean\n}\n\nexport const Metrics = (props: MetricsProps) => {\n  const { menuView, visible, main, details, nextPage, prevPage, setMenuView, scrollBar, visibleScroll } = props\n\n  const { palette } = useTheme()\n  const history = useHistory()\n\n  useEffect(() => {\n    setMenuView({\n      about: { view: true, inProgress: false },\n      metrics: {\n        view: (menuView.metrics.view || menuView.metrics.inProgress) ?? false,\n        inProgress: !menuView.metrics.view\n      },\n      links: {\n        view: (menuView.links.view || menuView.links.inProgress) ?? false,\n        inProgress: false\n      },\n      jobs: {\n        view: (menuView.jobs.view || menuView.jobs.inProgress) ?? false,\n        inProgress: false\n      },\n      deals: {\n        view: (menuView.deals.view || menuView.deals.inProgress) ?? false,\n        inProgress: false\n      },\n      contact: {\n        view: (menuView.contact.view || menuView.contact.inProgress) ?? false,\n        inProgress: false\n      }\n    })\n  }, [])\n\n  return (\n    <>\n      <If condition={visible}>\n        <ArrowPrevious onClick={() => history.push(prevPage as string)}>\n          <BackIcon />\n        </ArrowPrevious>\n      </If>\n      <Content>\n        <H2 primaryColor={palette.primary.main}>Métricas</H2>\n        <Block margin=\"0\">\n          <Cards gridTemplateColumns={2} padding=\"0 20px 0 0\">\n            <For of={main as MainProps[]} render={x => <Card title={x.value} subtitle={x.label} key={x.label} />} />\n          </Cards>\n        </Block>\n        <Block margin=\"20px\">\n          <For\n            of={details as DetailsProps[]}\n            render={detail => (\n              <Charts\n                title={detail.label}\n                subtitle={detail.desc}\n                data={detail.values}\n                key={detail.label}\n                typeChart=\"circle\"\n              />\n            )}\n          />\n        </Block>\n        <Block margin=\"20px\">\n          <For\n            of={details as DetailsProps[]}\n            render={detail => (\n              <Charts\n                title={detail.label}\n                subtitle={detail.desc}\n                data={detail.values}\n                key={detail.label}\n                typeChart=\"line\"\n              />\n            )}\n          />\n        </Block>\n        <If condition={scrollBar && visibleScroll}>\n          <ButtonSlide title=\"Deslize para mais\" visible={visible} />\n        </If>\n      </Content>\n      <If condition={visible}>\n        <ArrowNext onClick={() => history.push(nextPage as string)}>\n          <NextIcon />\n        </ArrowNext>\n      </If>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}