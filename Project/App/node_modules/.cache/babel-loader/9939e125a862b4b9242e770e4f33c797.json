{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghandi\\\\Downloads\\\\project\\\\src\\\\components\\\\button\\\\button.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport React from 'react';\nimport { If } from 'react-extras';\nimport { useTheme } from '@mui/material/styles';\nimport { Arrow, CheckIcon } from '../../assets';\nimport { BodyNormal, BodySmall, ButtonNormal } from '../../theme';\nimport { ButtonArrowWrapper, ButtonColoredWrapper, ButtonLargeWrapper, ButtonRoundedWrapper, ButtonSlideWrapper, ButtonTransparentWrapper, ButtonWrapper } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { ButtonSmall } from '../../theme/theme';\nexport const ButtonArrow = props => {\n  _s();\n\n  const {\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonArrowWrapper, {\n    background: palette.background.default,\n    primaryColor: palette.primary.main,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(Arrow, {\n      primaryColor: palette.primary.main\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ButtonArrow, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c = ButtonArrow;\nexport const Button = props => {\n  _s2();\n\n  const {\n    title,\n    active = false,\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n    background: palette.background.default,\n    primaryColor: palette.primary.main,\n    active: active,\n    onClick: onClick,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Button, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = Button;\nexport const ButtonLarge = props => {\n  _s3();\n\n  const {\n    title,\n    active = false,\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonLargeWrapper, {\n    background: palette.background.default,\n    primaryColor: palette.primary.main,\n    secondaryColor: palette.secondary.main,\n    active: active,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(ButtonNormal, {\n      primaryColor: palette.primary.main,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(ButtonLarge, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = ButtonLarge;\nexport const ButtonTransparent = props => {\n  _s4();\n\n  const {\n    title,\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonTransparentWrapper, {\n    background: palette.background.default,\n    primaryColor: palette.primary.main,\n    onClick: onClick,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(ButtonTransparent, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c4 = ButtonTransparent;\nexport const ButtonRounded = props => {\n  _s5();\n\n  const {\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonRoundedWrapper, {\n    background: palette.background.default,\n    primaryColor: palette.primary.main,\n    children: /*#__PURE__*/_jsxDEV(BodyNormal, {\n      primaryColor: palette.primary.main,\n      onClick: onClick,\n      children: \"x Fechar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(ButtonRounded, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c5 = ButtonRounded;\nexport const ButtonColored = props => {\n  _s6();\n\n  const {\n    backgroundColor,\n    checked = false,\n    color,\n    title,\n    onClick\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonColoredWrapper, {\n    primaryColor: palette.primary.main,\n    backgroundColor: backgroundColor,\n    color: color,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(If, {\n      condition: checked,\n      children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        backgroundColor: palette.background.default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s6(ButtonColored, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c6 = ButtonColored;\nexport const ButtonSlide = props => {\n  _s7();\n\n  const {\n    title,\n    visible\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(ButtonSlideWrapper, {\n    primaryColor: palette.primary.main,\n    mobile: visible,\n    children: /*#__PURE__*/_jsxDEV(BodySmall, {\n      primaryColor: palette.primary.main,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s7(ButtonSlide, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c7 = ButtonSlide;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ButtonArrow\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"ButtonLarge\");\n$RefreshReg$(_c4, \"ButtonTransparent\");\n$RefreshReg$(_c5, \"ButtonRounded\");\n$RefreshReg$(_c6, \"ButtonColored\");\n$RefreshReg$(_c7, \"ButtonSlide\");","map":{"version":3,"sources":["C:/Users/ghandi/Downloads/project/src/components/button/button.tsx"],"names":["React","If","useTheme","Arrow","CheckIcon","BodyNormal","BodySmall","ButtonNormal","ButtonArrowWrapper","ButtonColoredWrapper","ButtonLargeWrapper","ButtonRoundedWrapper","ButtonSlideWrapper","ButtonTransparentWrapper","ButtonWrapper","ButtonSmall","ButtonArrow","props","onClick","palette","background","default","primary","main","Button","title","active","ButtonLarge","secondary","ButtonTransparent","ButtonRounded","ButtonColored","backgroundColor","checked","color","ButtonSlide","visible"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { If } from 'react-extras'\n\nimport { useTheme } from '@mui/material/styles'\n\nimport { Arrow, CheckIcon } from '../../assets'\nimport { BodyNormal, BodySmall, ButtonNormal } from '../../theme'\nimport {\n  ButtonArrowWrapper,\n  ButtonColoredWrapper,\n  ButtonLargeWrapper,\n  ButtonRoundedWrapper,\n  ButtonSlideWrapper,\n  ButtonTransparentWrapper,\n  ButtonWrapper\n} from './styles'\n\nexport { ButtonSmall } from '../../theme/theme'\n\ninterface ButtonArrowProps {\n  onClick: (value: any) => void\n}\n\nexport const ButtonArrow = (props: ButtonArrowProps) => {\n  const { onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonArrowWrapper background={palette.background.default} primaryColor={palette.primary.main} onClick={onClick}>\n      <Arrow primaryColor={palette.primary.main} />\n    </ButtonArrowWrapper>\n  )\n}\n\ntype ButtonProps = {\n  title: string\n  active?: boolean\n  onClick: (value: any) => void\n}\n\nexport const Button = (props: ButtonProps) => {\n  const { title, active = false, onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonWrapper\n      background={palette.background.default}\n      primaryColor={palette.primary.main}\n      active={active}\n      onClick={onClick}\n    >\n      {title}\n    </ButtonWrapper>\n  )\n}\n\nexport const ButtonLarge = (props: ButtonProps) => {\n  const { title, active = false, onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonLargeWrapper\n      background={palette.background.default}\n      primaryColor={palette.primary.main}\n      secondaryColor={palette.secondary.main}\n      active={active}\n      onClick={onClick}\n    >\n      <ButtonNormal primaryColor={palette.primary.main}>{title}</ButtonNormal>\n    </ButtonLargeWrapper>\n  )\n}\n\ninterface ButtonTransparentProps {\n  title: JSX.Element | string\n  onClick: (value: any) => void\n}\n\nexport const ButtonTransparent = (props: ButtonTransparentProps) => {\n  const { title, onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonTransparentWrapper\n      background={palette.background.default}\n      primaryColor={palette.primary.main}\n      onClick={onClick}\n    >\n      {title}\n    </ButtonTransparentWrapper>\n  )\n}\n\nexport const ButtonRounded = (props: ButtonArrowProps) => {\n  const { onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonRoundedWrapper background={palette.background.default} primaryColor={palette.primary.main}>\n      <BodyNormal primaryColor={palette.primary.main} onClick={onClick}>\n        x Fechar\n      </BodyNormal>\n    </ButtonRoundedWrapper>\n  )\n}\n\ninterface ButtonColoredProps {\n  backgroundColor: string\n  color: string\n  title: string\n  checked?: boolean\n  onClick: (value: any) => void\n}\n\nexport const ButtonColored = (props: ButtonColoredProps) => {\n  const { backgroundColor, checked = false, color, title, onClick } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonColoredWrapper\n      primaryColor={palette.primary.main}\n      backgroundColor={backgroundColor}\n      color={color}\n      onClick={onClick}\n    >\n      <If condition={checked}>\n        <CheckIcon backgroundColor={palette.background.default} />\n      </If>\n      {title}\n    </ButtonColoredWrapper>\n  )\n}\n\ninterface ButtonSlideProps {\n  title: string\n  visible: boolean\n}\n\nexport const ButtonSlide = (props: ButtonSlideProps) => {\n  const { title, visible } = props\n  const { palette } = useTheme()\n\n  return (\n    <ButtonSlideWrapper primaryColor={palette.primary.main} mobile={visible}>\n      <BodySmall primaryColor={palette.primary.main}>{title}</BodySmall>\n    </ButtonSlideWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}