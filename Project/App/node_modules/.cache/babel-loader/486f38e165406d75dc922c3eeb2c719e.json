{"ast":null,"code":"'use strict'; // Gets all non-builtin properties up the prototype chain\n\nconst getAllProperties = object => {\n  const properties = new Set();\n\n  do {\n    for (const key of Reflect.ownKeys(object)) {\n      properties.add([object, key]);\n    }\n  } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n  return properties;\n};\n\nmodule.exports = (self, {\n  include,\n  exclude\n} = {}) => {\n  const filter = key => {\n    const match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n    if (include) {\n      return include.some(match);\n    }\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === 'constructor' || !filter(key)) {\n      continue;\n    }\n\n    const descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\n    if (descriptor && typeof descriptor.value === 'function') {\n      self[key] = self[key].bind(self);\n    }\n  }\n\n  return self;\n};","map":{"version":3,"sources":["C:/Users/ghandi/Project/App/node_modules/auto-bind/index.js"],"names":["getAllProperties","object","properties","Set","key","Reflect","ownKeys","add","getPrototypeOf","Object","prototype","module","exports","self","include","exclude","filter","match","pattern","test","some","constructor","descriptor","getOwnPropertyDescriptor","value","bind"],"mappings":"AAAA,a,CAEA;;AACA,MAAMA,gBAAgB,GAAGC,MAAM,IAAI;AAClC,QAAMC,UAAU,GAAG,IAAIC,GAAJ,EAAnB;;AAEA,KAAG;AACF,SAAK,MAAMC,GAAX,IAAkBC,OAAO,CAACC,OAAR,CAAgBL,MAAhB,CAAlB,EAA2C;AAC1CC,MAAAA,UAAU,CAACK,GAAX,CAAe,CAACN,MAAD,EAASG,GAAT,CAAf;AACA;AACD,GAJD,QAIS,CAACH,MAAM,GAAGI,OAAO,CAACG,cAAR,CAAuBP,MAAvB,CAAV,KAA6CA,MAAM,KAAKQ,MAAM,CAACC,SAJxE;;AAMA,SAAOR,UAAP;AACA,CAVD;;AAYAS,MAAM,CAACC,OAAP,GAAiB,CAACC,IAAD,EAAO;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAqB,EAA5B,KAAmC;AACnD,QAAMC,MAAM,GAAGZ,GAAG,IAAI;AACrB,UAAMa,KAAK,GAAGC,OAAO,IAAI,OAAOA,OAAP,KAAmB,QAAnB,GAA8Bd,GAAG,KAAKc,OAAtC,GAAgDA,OAAO,CAACC,IAAR,CAAaf,GAAb,CAAzE;;AAEA,QAAIU,OAAJ,EAAa;AACZ,aAAOA,OAAO,CAACM,IAAR,CAAaH,KAAb,CAAP;AACA;;AAED,QAAIF,OAAJ,EAAa;AACZ,aAAO,CAACA,OAAO,CAACK,IAAR,CAAaH,KAAb,CAAR;AACA;;AAED,WAAO,IAAP;AACA,GAZD;;AAcA,OAAK,MAAM,CAAChB,MAAD,EAASG,GAAT,CAAX,IAA4BJ,gBAAgB,CAACa,IAAI,CAACQ,WAAL,CAAiBX,SAAlB,CAA5C,EAA0E;AACzE,QAAIN,GAAG,KAAK,aAAR,IAAyB,CAACY,MAAM,CAACZ,GAAD,CAApC,EAA2C;AAC1C;AACA;;AAED,UAAMkB,UAAU,GAAGjB,OAAO,CAACkB,wBAAR,CAAiCtB,MAAjC,EAAyCG,GAAzC,CAAnB;;AACA,QAAIkB,UAAU,IAAI,OAAOA,UAAU,CAACE,KAAlB,KAA4B,UAA9C,EAA0D;AACzDX,MAAAA,IAAI,CAACT,GAAD,CAAJ,GAAYS,IAAI,CAACT,GAAD,CAAJ,CAAUqB,IAAV,CAAeZ,IAAf,CAAZ;AACA;AACD;;AAED,SAAOA,IAAP;AACA,CA3BD","sourcesContent":["'use strict';\n\n// Gets all non-builtin properties up the prototype chain\nconst getAllProperties = object => {\n\tconst properties = new Set();\n\n\tdo {\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tproperties.add([object, key]);\n\t\t}\n\t} while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);\n\n\treturn properties;\n};\n\nmodule.exports = (self, {include, exclude} = {}) => {\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\n\t\tif (include) {\n\t\t\treturn include.some(match);\n\t\t}\n\n\t\tif (exclude) {\n\t\t\treturn !exclude.some(match);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tfor (const [object, key] of getAllProperties(self.constructor.prototype)) {\n\t\tif (key === 'constructor' || !filter(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(object, key);\n\t\tif (descriptor && typeof descriptor.value === 'function') {\n\t\t\tself[key] = self[key].bind(self);\n\t\t}\n\t}\n\n\treturn self;\n};\n"]},"metadata":{},"sourceType":"script"}