{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\App\\\\src\\\\components\\\\chart\\\\chart.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { ChartAxis, ChartDonut, ChartGroup, ChartLabel, ChartLine, Chart, ChartVoronoiContainer, ChartScatter } from '@patternfly/react-charts';\nimport { BodyTiny, H5 } from '../../theme';\nimport { ChartWrapper } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Charts = props => {\n  _s();\n\n  const {\n    title,\n    subtitle,\n    data,\n    typeChart\n  } = props;\n  const {\n    palette\n  } = useTheme();\n  const dataList = data.map(dt => ({\n    name: title,\n    x: dt.x,\n    y: dt.y\n  }));\n  const colors = [palette.secondary.main, palette.primary.main, palette.gradient[200]];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeChart === 'circle' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ChartWrapper, {\n        secondaryColor: palette.secondary.main,\n        children: [/*#__PURE__*/_jsxDEV(H5, {\n          primaryColor: palette.primary.main,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BodyTiny, {\n          primaryColor: palette.primary.main,\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '220px',\n            width: '95%'\n          },\n          children: /*#__PURE__*/_jsxDEV(ChartDonut, {\n            ariaDesc: `${subtitle}`,\n            constrainToVisibleArea: true,\n            colorScale: colors,\n            data: dataList,\n            labels: ({\n              datum\n            }) => `${datum.x}: ${datum.y}%`,\n            legendData: dataList.map((item, index) => {\n              return {\n                name: `${item.x} (${item.y}%)`,\n                symbol: {\n                  fill: `${colors[index]}`\n                }\n              };\n            }),\n            legendOrientation: \"vertical\",\n            legendPosition: \"right\",\n            padding: {\n              bottom: 20,\n              left: 20,\n              right: 170,\n              top: 20\n            },\n            titleComponent: /*#__PURE__*/_jsxDEV(ChartLabel, {\n              style: [{\n                fill: palette.primary.main,\n                fontSize: 30,\n                fontWeight: 'bold'\n              }, {\n                fill: palette.primary.main,\n                fontSize: 22\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this),\n            sortOrder: \"descending\",\n            subTitle: `${dataList[0].x}`,\n            title: `${dataList[0].y}%`,\n            width: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), typeChart === 'line' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ChartWrapper, {\n        secondaryColor: palette.secondary.main,\n        children: [/*#__PURE__*/_jsxDEV(H5, {\n          primaryColor: palette.primary.main,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BodyTiny, {\n          primaryColor: palette.primary.main,\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          containerComponent: /*#__PURE__*/_jsxDEV(ChartVoronoiContainer, {\n            labels: ({\n              datum\n            }) => `${datum.name}: ${datum.y}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 35\n          }, this),\n          legendOrientation: \"vertical\",\n          legendPosition: \"right\",\n          height: 300,\n          width: 500,\n          maxDomain: {\n            y: 10\n          },\n          minDomain: {\n            y: 0\n          },\n          name: \"evolucao seguidores\",\n          themeVariant: \"\",\n          children: [/*#__PURE__*/_jsxDEV(ChartAxis, {\n            tickValues: [2, 3, 4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChartAxis, {\n            dependentAxis: true,\n            showGrid: true,\n            tickValues: [2, 5, 8]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChartGroup, {\n            children: /*#__PURE__*/_jsxDEV(ChartScatter, {\n              data: dataList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChartGroup, {\n            children: /*#__PURE__*/_jsxDEV(ChartLine, {\n              data: dataList,\n              style: {\n                data: {\n                  stroke: '#93EE92',\n                  height: '20px',\n                  strokeWidth: '6'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(Charts, \"KSZZ7uh0OZO6dgta9vGWhMa24zw=\", false, function () {\n  return [useTheme];\n});\n\n_c = Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Project/App/src/components/chart/chart.tsx"],"names":["React","useTheme","ChartAxis","ChartDonut","ChartGroup","ChartLabel","ChartLine","Chart","ChartVoronoiContainer","ChartScatter","BodyTiny","H5","ChartWrapper","Charts","props","title","subtitle","data","typeChart","palette","dataList","map","dt","name","x","y","colors","secondary","main","primary","gradient","height","width","datum","item","index","symbol","fill","bottom","left","right","top","fontSize","fontWeight","stroke","strokeWidth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\n\nimport { useTheme } from '@mui/material/styles'\nimport {\n  ChartAxis,\n  ChartDonut,\n  ChartGroup,\n  ChartLabel,\n  ChartLine,\n  Chart,\n  ChartVoronoiContainer,\n  ChartScatter\n} from '@patternfly/react-charts'\n\nimport { BodyTiny, H5 } from '../../theme'\nimport { ChartWrapper } from './styles'\n\ninterface DataProps {\n  x: string\n  y: string\n}\n\ninterface ChartProps {\n  title: string\n  subtitle: string\n  data: DataProps[]\n  typeChart: string\n}\n\nexport const Charts = (props: ChartProps) => {\n  const { title, subtitle, data, typeChart } = props\n  const { palette } = useTheme()\n\n  const dataList = data.map(dt => ({ name: title, x: dt.x, y: dt.y }))\n\n  const colors = [palette.secondary.main, palette.primary.main, palette.gradient[200]]\n\n  return (\n    <>\n      {typeChart === 'circle' && (\n        <>\n          <ChartWrapper secondaryColor={palette.secondary.main}>\n            <H5 primaryColor={palette.primary.main}>{title}</H5>\n            <BodyTiny primaryColor={palette.primary.main}>{subtitle}</BodyTiny>\n            <div style={{ height: '220px', width: '95%' }}>\n              <ChartDonut\n                ariaDesc={`${subtitle}`}\n                constrainToVisibleArea\n                colorScale={colors}\n                data={dataList}\n                labels={({ datum }) => `${datum.x}: ${datum.y}%`}\n                legendData={dataList.map((item, index) => {\n                  return { name: `${item.x} (${item.y}%)`, symbol: { fill: `${colors[index]}` } }\n                })}\n                legendOrientation=\"vertical\"\n                legendPosition=\"right\"\n                padding={{\n                  bottom: 20,\n                  left: 20,\n                  right: 170,\n                  top: 20\n                }}\n                titleComponent={\n                  <ChartLabel\n                    style={[\n                      { fill: palette.primary.main, fontSize: 30, fontWeight: 'bold' },\n                      { fill: palette.primary.main, fontSize: 22 }\n                    ]}\n                  />\n                }\n                sortOrder=\"descending\"\n                subTitle={`${dataList[0].x}`}\n                title={`${dataList[0].y}%`}\n                width={350}\n              />\n            </div>\n          </ChartWrapper>\n        </>\n      )}\n      {typeChart === 'line' && (\n        <>\n          <ChartWrapper secondaryColor={palette.secondary.main}>\n            <H5 primaryColor={palette.primary.main}>{title}</H5>\n            <BodyTiny primaryColor={palette.primary.main}>{subtitle}</BodyTiny>\n            <Chart\n              containerComponent={<ChartVoronoiContainer labels={({ datum }) => `${datum.name}: ${datum.y}`} />}\n              legendOrientation=\"vertical\"\n              legendPosition=\"right\"\n              height={300}\n              width={500}\n              maxDomain={{ y: 10 }}\n              minDomain={{ y: 0 }}\n              name=\"evolucao seguidores\"\n              themeVariant=\"\"\n            >\n              <ChartAxis tickValues={[2, 3, 4]} />\n              <ChartAxis dependentAxis showGrid tickValues={[2, 5, 8]} />\n              <ChartGroup>\n                <ChartScatter data={dataList} />\n              </ChartGroup>\n              <ChartGroup>\n                <ChartLine\n                  data={dataList}\n                  style={{\n                    data: {\n                      stroke: '#93EE92',\n                      height: '20px',\n                      strokeWidth: '6'\n                    }\n                  }}\n                />\n              </ChartGroup>\n            </Chart>\n          </ChartWrapper>\n        </>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}